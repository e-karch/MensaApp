name: Build-Rust

on:
  push:
    branches: [ "main", "backend" ]
    paths: 
      - "backend/**"
  pull_request:
    branches: [ "main", "backend" ]
    paths: 
      - "backend/**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  FLICKR_PUBLIC_KEY: ${{ secrets.FLICKR_PUBLIC_KEY }}
  SMTP_SERVER: ${{ vars.SMTP_SERVER }}
  SMTP_PORT: ${{ vars.SMTP_PORT }}
  SMTP_USERNAME: ${{ vars.SMTP_USERNAME }}
  SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
  ADMIN_EMAIL: ${{ vars.ADMIN_EMAIL }}


jobs:
  build_rust:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Check formatting
      run: cargo fmt --check
    - name: Check linter warnings
      run: cargo clippy -- -D warnings
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    # - name: Check prepared sql query information
    #   run: |
    #     echo using database at: $DATABASE_URL
    #     cargo install sqlx-cli
    #     # docker run -itd -e POSTGRES_USER=postgres_user -e POSTGRES_PASSWORD=secret_password -e POSTGRES_HOST_AUTH_METHOD=trust -e POSTGRES_DB=mensa_app -p 5432:5432 -v data:/var/lib/postgresql/data --name postgresql postgres
    #     # cargo sqlx mig run
    #     # cargo sqlx prepare --check
    #   env:
    #     DATABASE_URL: "postgres://postgres_user@localhost/mensa_app"
